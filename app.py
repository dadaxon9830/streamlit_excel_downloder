import streamlit as st
import pandas as pd
from collections import Counter
import xlsxwriter
import openpyxl


st.set_page_config(page_title="–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
st.title("Data analyzer üìà üìä")
st.write(" ")

uploded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ Excel —Ñ–∞–π–ª  : ", type=["xlsx", "xls"])
if uploded_file:
    try:
        df = pd.read_excel(uploded_file)
        st.markdown("---")

        deleted_data_list= st.multiselect("–£–¥–∞–ª–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–π (–Ω–µ–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π) –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å : ", df.columns)
        df=df.drop(deleted_data_list,axis=1)
        column_names=df.columns
        st.sidebar.header("–î–µ–π—Å—Ç–≤–∏—è")
        show_btn = st.sidebar.button("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞—Ç–∞")
        if show_btn:
            st.subheader(" –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            st.dataframe(df)
    except Exception as e:
        st.warning(f"–û—à–∏–±–∫–∞ —Å —á–∏—Ç–µ–Ω–∏–µ–º –∏–ª–∏ –ø–æ–∫–∞–∑–∞–Ω–∏–µ–º : {e}")

    button_emp = st.sidebar.button("–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã")
    try:
        col_nums = df.shape[1]
        row_nums = df.shape[0]
        summa = 0
        for i, j in enumerate(df):
            summa += df[j].isna().sum()
        per = summa / (row_nums * col_nums) * 100
        if button_emp:
            st.header("–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã ")
            st.write("–í—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—ã —Å–∏—Å—Ç–µ–º—ã : ", column_names)
            st.write("–ß–∏—Å–ª–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π : ", row_nums)
            st.write("–ß–∏—Å–ª–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π : ", col_nums)
            st.write("–û–±—à–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫—Ç–æ–≤  : ", summa)
            st.write("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö : ", row_nums * col_nums - summa)
            st.header("–ó–∞–∫–ª—é—á–µ–Ω–∏–µ : ")
            st.subheader("–ü–æ–ª–Ω–æ—Ç—ã –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –¥–∞–Ω–Ω—ã—Ö : ")
            if 0 <= row_nums < 100:
                if 0 <= col_nums < 50:
                    st.write("–ú–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö")
                elif 50 <= col_nums < 1000:
                    st.write("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
                else:
                    st.write("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            elif 100 <= row_nums < 500:
                if 0 <= col_nums < 50:
                    st.write("–ú–∞–ª–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–ª–æ–∂–Ω–æ–≥–æ")
                elif 50 <= col_nums < 1000:
                    st.write("–î–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –æ–±—ä–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–ª–æ–∂–Ω–æ–≥–æ")
                else:
                    st.write("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            elif 500 <= row_nums < 2000:
                if 0 <= col_nums < 50:
                    st.write("–ú–∞–ª–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–ª–æ–∂–Ω–æ–≥–æ")
                elif 50 <= col_nums < 1000:
                    st.write("–û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–ª–æ–∂–Ω–æ–≥–æ –∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏")
                else:
                    st.write("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö")
            else:
                st.write("–£—Å–ª–æ–∂–Ω–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –≤–≤–∏–¥—É –∑–∞–º–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ ")
            st.subheader("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ : ")
            if per <= 5:
                st.write("–ù–µ–∑–Ω–∞—á–∏–ª—å–Ω–æ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã")
            elif per < 20:
                st.write("–ó–Ω–∞—á–∏–ª—å–Ω–æ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã")
            else:
                st.write("–û–Ω–∏ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ")
    except Exception as e:
        st.warning(f"–≠–º–ø–∏—Ä–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ : {e}")

    try:
        button_port = st.sidebar.button("–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç —Å–∏—Å—Ç–µ–º—ã")
        info_desc = df.describe()
        if button_port:
            st.header("–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç —Å–∏—Å—Ç–µ–º—ã")
            st.write(info_desc)
    except Exception as e:
        st.warning(f"–°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ : {e}")

    try:
        st.sidebar.title("–°–ª–æ–≤–∞ –∏ –ü–æ–Ω—è—Ç–∏—è")
        obyom_rang = dict()
        dol_raz_sostoyaniy = dict()
        max_sovpad = dict()
        sr_sovpad = dict()
        for i in df:
            obyem_viborki = df[i].notna().sum()
            koef1 = obyem_viborki / len(df)
            if koef1 < 0.25:
                ko = 1
            elif koef1 < 0.5:
                ko = 2
            elif koef1 < 0.75:
                ko = 3
            else:
                ko = 4
            obyom_rang[i] = ko
            dol_raz_sostoyaniy[i] = df[i].nunique() / len(df)
            counter = Counter(df[i].values)
            max_frequency = max(counter.values())
            res_max_freq = (max_frequency - 1) / (obyem_viborki - 1)
            max_sovpad[i] = res_max_freq
            srsovpad_val = df[i].nunique()
            sr_sovpad[i] = 1 / df[i].nunique() if df[i].nunique() > 0 else 0

        sorted_obyom_rang = dict(sorted(obyom_rang.items(), key=lambda x: x[1], reverse=True))
        sorted_dol_raz_sos = dict(sorted(dol_raz_sostoyaniy.items(), key=lambda x: x[1], reverse=True))
        sorted_res_max_sovpad = dict(sorted(max_sovpad.items(), key=lambda x: x[1], reverse=False))
        sorted_sr_sovpad = dict(sorted(sr_sovpad.items(), key=lambda x: x[1], reverse=False))
        if "button_clicked" not in st.session_state:
            st.session_state.button_clicked = False
        def callback():
            st.session_state.button_clicked = True
        def anticallback():
            st.session_state.button_clicked = False
        pred_btn = st.sidebar.button("–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",on_click=callback)
        if pred_btn or st.session_state.button_clicked:
            st.title("–¢–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è:")
            dictt={"–í–∞—Ä_0":sorted_obyom_rang.keys(),
                   "–û–±—ä–µ–º-—Ä–∞–Ω–≥":sorted_obyom_rang.values(),
                   "–í–∞—Ä_1":sorted_dol_raz_sos.keys(),
                   "–î–æ–ª—è —Ä–∞–∑–Ω.–∑–Ω–∞—á.":sorted_dol_raz_sos.values(),
                   "–í–∞—Ä_2": sorted_res_max_sovpad.keys(),
                   "–ú–∞–∫—Å.—Å–æ–≤–ø–∞–¥.":sorted_res_max_sovpad.values(),
                   "–í–∞—Ä_3":sorted_sr_sovpad.keys(),
                   "–°—Ä.–°–æ–≤–ø–∞–¥":sorted_sr_sovpad.values()
            }
            dataa= pd.DataFrame(dictt)
            st.write(dataa)
            file_name=st.text_input("–ß—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –≤–∏–¥–µ –µ–∫—Å–µ–ª—å —Ñ–∞–π–ª, –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞:")
            dataa.to_excel(f"C:/Users/dadaxon9830/Desktop/{file_name}.xlsx", index=False)
            if file_name:
                st.success(f"–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º <-{file_name}->")
                anticallback()


            st.title("–ò–∑–º–µ–Ω—á–∏–≤–æ—Å—Ç—å")
            st.subheader("–ú–∞—Å—à—Ç–∞–±–Ω–æ—Å—Ç—å ")
            st.write("–†–∞–∑–º–∞—Ö –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è : ---")
            st.subheader("–•–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π")
            st.write("–•–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π : ---")
            st.subheader("–ù–µ–ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å")
            st.write("–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –≤–∞—Ä–∏–∞—Ü–∏–∏ : --- ")

            st.title("–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å")
            st.subheader("–ì—Ä—É–ø–ø–∏—Ä—É–µ–º–æ—Å—Ç—å")
            st.write("–ß–∏—Å–ª–æ –≥—Ä—É–ø–ø : ---")
            st.subheader("–ì–ª–∞–¥–∫–æ—Å—Ç—å")
            st.write("–°—Ä–µ–¥–Ω–µ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ : ---")
            st.subheader("–†–µ–ª—å–µ—Ñ–Ω–æ—Å—Ç—å")
            st.write("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏")
    except Exception as e:
        st.warning(f"–ü—Ä–µ–¥—Å—Ç–≤–∏—Ç–µ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ : {e}")

    st.sidebar.title("–ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–∏–ø–∏—á–Ω–æ–≥–æ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ–≥–æ")
    box2 = st.sidebar.selectbox("xonn",
                                ("–ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å –≤–µ–ª–∏—á–∏–Ω",
                                 "–ú–Ω–æ–≥–æ–∑–Ω–∞—á–Ω–æ—Å—Ç—å", "–ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å", "–£–∫–ª–æ–Ω–µ–Ω–∏–µ",
                                 "–¢–∏–ø–∏—á–Ω–æ—Å—Ç—å", "–§–∏–≥—É—Ä–Ω–æ—Å—Ç—å", "–û—Ç–ø–∞–¥–µ–Ω–∏–µ",
                                 "–ò–∑–º–µ–Ω—è–µ–º–æ—Å—Ç—å", "–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å", "–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å")
                                )


